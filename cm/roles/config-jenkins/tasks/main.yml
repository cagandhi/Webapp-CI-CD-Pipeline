---
- name: Change default port number in /etc/default/jenkins
  ansible.builtin.lineinfile:
    path: /etc/default/jenkins
    regexp: '^HTTP_PORT='
    line: HTTP_PORT={{ JENKINS_PORT }}
  become: yes

- name: Download jenkins-cli.jar
  get_url:
    url: http://localhost:9000/jnlpJars/jenkins-cli.jar
    dest: /home/vagrant/jenkins-cli.jar

- name: Add jenkins env variables jenkins to /etc/environment
  lineinfile:
    path: "/etc/environment"
    line: "{{ item.split(': ')[0] }}={{ item.split(': ')[1] }}"
  loop: "{{ lookup('file', '../vars/main.yml').splitlines() }}"
  become: yes

- name: Source environment variables
  shell: . /etc/environment

- name: Create Directory For Jenkins(Groovy Script)
  file:
    path: "/var/lib/jenkins/init.groovy.d"
    state: directory
  register: groovy_dir
  become: yes

- name: Disable setup wizard
  lineinfile:
    dest: "/etc/default/jenkins"
    state: present
    regexp: "^JAVA_ARGS="
    line: JAVA_ARGS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"
  become: yes

- name: Copy Groovy script for admin (default user) creation
  template:
    force: yes
    src: "/bakerx/cm/roles/config-jenkins/templates/basic-security.groovy"
    dest: "/var/lib/jenkins/init.groovy.d/basic-security.groovy"
  become: yes

- name: Ensure Jenkins service is restarted
  service:
    name: jenkins
    state: restarted
    enabled: yes
  become: yes

# - name: Wait for jenkins to start up
#   shell: curl --head --silent http://localhost:9000/
#   register: result
#   until: result.stdout.find("200 OK") != -1
#   retries: 20
#   delay: 10

- name: Wait for jenkins to start up
  wait_for:
    timeout: 180
  delegate_to: localhost

- name: Delete grovvy script
  file:
    path: /var/lib/jenkins/init.groovy.d/basic-security.groovy
    state: absent
  become: yes

- name: Install jenkins plugins
  jenkins_plugin:
    name: "{{ item }}"
    url_username: "{{ JENKINS_USERNAME }}"
    url_password: "{{ JENKINS_PASSWORD }}"
    url: "{{ JENKINS_URL }}"
    timeout: 60
  with_items: [github, jenkins-job-builder, workflow-aggregator, ws-cleanup]
  become: yes

- name: Ensure Jenkins service is restarted after installing plugins
  service:
    name: jenkins
    state: restarted
  become: yes
